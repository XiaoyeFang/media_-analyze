// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pure_media.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DLRequest struct {
	// 视频地址
	VideoUrl string `protobuf:"bytes,1,opt,name=videoUrl,proto3" json:"videoUrl,omitempty"`
	// 下载格式 默认1080P
	Format               string   `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DLRequest) Reset()         { *m = DLRequest{} }
func (m *DLRequest) String() string { return proto.CompactTextString(m) }
func (*DLRequest) ProtoMessage()    {}
func (*DLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{0}
}
func (m *DLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DLRequest.Unmarshal(m, b)
}
func (m *DLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DLRequest.Marshal(b, m, deterministic)
}
func (dst *DLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DLRequest.Merge(dst, src)
}
func (m *DLRequest) XXX_Size() int {
	return xxx_messageInfo_DLRequest.Size(m)
}
func (m *DLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DLRequest proto.InternalMessageInfo

func (m *DLRequest) GetVideoUrl() string {
	if m != nil {
		return m.VideoUrl
	}
	return ""
}

func (m *DLRequest) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

type DLReply struct {
	Fid string `protobuf:"bytes,1,opt,name=fid,proto3" json:"fid,omitempty"`
	// 添加结果
	Context              string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DLReply) Reset()         { *m = DLReply{} }
func (m *DLReply) String() string { return proto.CompactTextString(m) }
func (*DLReply) ProtoMessage()    {}
func (*DLReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{1}
}
func (m *DLReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DLReply.Unmarshal(m, b)
}
func (m *DLReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DLReply.Marshal(b, m, deterministic)
}
func (dst *DLReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DLReply.Merge(dst, src)
}
func (m *DLReply) XXX_Size() int {
	return xxx_messageInfo_DLReply.Size(m)
}
func (m *DLReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DLReply.DiscardUnknown(m)
}

var xxx_messageInfo_DLReply proto.InternalMessageInfo

func (m *DLReply) GetFid() string {
	if m != nil {
		return m.Fid
	}
	return ""
}

func (m *DLReply) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

type AddRequest struct {
	// 图片URL
	ImgUrl string `protobuf:"bytes,1,opt,name=imgUrl,proto3" json:"imgUrl,omitempty"`
	// 图片名称
	ImgName              string   `protobuf:"bytes,2,opt,name=imgName,proto3" json:"imgName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{2}
}
func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (dst *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(dst, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetImgUrl() string {
	if m != nil {
		return m.ImgUrl
	}
	return ""
}

func (m *AddRequest) GetImgName() string {
	if m != nil {
		return m.ImgName
	}
	return ""
}

type AddReply struct {
	ImgId string `protobuf:"bytes,1,opt,name=imgId,proto3" json:"imgId,omitempty"`
	// 添加结果
	Result               string   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddReply) Reset()         { *m = AddReply{} }
func (m *AddReply) String() string { return proto.CompactTextString(m) }
func (*AddReply) ProtoMessage()    {}
func (*AddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{3}
}
func (m *AddReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddReply.Unmarshal(m, b)
}
func (m *AddReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddReply.Marshal(b, m, deterministic)
}
func (dst *AddReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddReply.Merge(dst, src)
}
func (m *AddReply) XXX_Size() int {
	return xxx_messageInfo_AddReply.Size(m)
}
func (m *AddReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddReply proto.InternalMessageInfo

func (m *AddReply) GetImgId() string {
	if m != nil {
		return m.ImgId
	}
	return ""
}

func (m *AddReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type ImgCensorRequest struct {
	// 图片URL
	ImgUrl               string   `protobuf:"bytes,1,opt,name=imgUrl,proto3" json:"imgUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImgCensorRequest) Reset()         { *m = ImgCensorRequest{} }
func (m *ImgCensorRequest) String() string { return proto.CompactTextString(m) }
func (*ImgCensorRequest) ProtoMessage()    {}
func (*ImgCensorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{4}
}
func (m *ImgCensorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImgCensorRequest.Unmarshal(m, b)
}
func (m *ImgCensorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImgCensorRequest.Marshal(b, m, deterministic)
}
func (dst *ImgCensorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImgCensorRequest.Merge(dst, src)
}
func (m *ImgCensorRequest) XXX_Size() int {
	return xxx_messageInfo_ImgCensorRequest.Size(m)
}
func (m *ImgCensorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImgCensorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImgCensorRequest proto.InternalMessageInfo

func (m *ImgCensorRequest) GetImgUrl() string {
	if m != nil {
		return m.ImgUrl
	}
	return ""
}

type ImgCensorReply struct {
	// 鉴黄结果
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImgCensorReply) Reset()         { *m = ImgCensorReply{} }
func (m *ImgCensorReply) String() string { return proto.CompactTextString(m) }
func (*ImgCensorReply) ProtoMessage()    {}
func (*ImgCensorReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{5}
}
func (m *ImgCensorReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImgCensorReply.Unmarshal(m, b)
}
func (m *ImgCensorReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImgCensorReply.Marshal(b, m, deterministic)
}
func (dst *ImgCensorReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImgCensorReply.Merge(dst, src)
}
func (m *ImgCensorReply) XXX_Size() int {
	return xxx_messageInfo_ImgCensorReply.Size(m)
}
func (m *ImgCensorReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ImgCensorReply.DiscardUnknown(m)
}

var xxx_messageInfo_ImgCensorReply proto.InternalMessageInfo

func (m *ImgCensorReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type UploadFileRequest struct {
	// 文件url
	FileUrl string `protobuf:"bytes,1,opt,name=fileUrl,proto3" json:"fileUrl,omitempty"`
	// Tags,方便搜索
	Tags []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	// FileType
	FileType string `protobuf:"bytes,3,opt,name=fileType,proto3" json:"fileType,omitempty"`
	// s3 bucket
	Bucket string `protobuf:"bytes,4,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// 前缀
	Prefix               string   `protobuf:"bytes,5,opt,name=prefix,proto3" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadFileRequest) Reset()         { *m = UploadFileRequest{} }
func (m *UploadFileRequest) String() string { return proto.CompactTextString(m) }
func (*UploadFileRequest) ProtoMessage()    {}
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{6}
}
func (m *UploadFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadFileRequest.Unmarshal(m, b)
}
func (m *UploadFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadFileRequest.Marshal(b, m, deterministic)
}
func (dst *UploadFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadFileRequest.Merge(dst, src)
}
func (m *UploadFileRequest) XXX_Size() int {
	return xxx_messageInfo_UploadFileRequest.Size(m)
}
func (m *UploadFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadFileRequest proto.InternalMessageInfo

func (m *UploadFileRequest) GetFileUrl() string {
	if m != nil {
		return m.FileUrl
	}
	return ""
}

func (m *UploadFileRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *UploadFileRequest) GetFileType() string {
	if m != nil {
		return m.FileType
	}
	return ""
}

func (m *UploadFileRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *UploadFileRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

type UploadFileReply struct {
	// S3文件id
	FileId string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
	// 文件大小，单位：Bytes
	FileSize int64 `protobuf:"varint,2,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	// 文件哈希
	FileSha256 string `protobuf:"bytes,3,opt,name=fileSha256,proto3" json:"fileSha256,omitempty"`
	// 文件类型image
	FileType string `protobuf:"bytes,4,opt,name=fileType,proto3" json:"fileType,omitempty"`
	// 图片类型
	ImageFormat string `protobuf:"bytes,5,opt,name=imageFormat,proto3" json:"imageFormat,omitempty"`
	// 图片宽度
	ImageWidth int64 `protobuf:"varint,6,opt,name=imageWidth,proto3" json:"imageWidth,omitempty"`
	// 图片高度
	ImageHeight int64 `protobuf:"varint,7,opt,name=imageHeight,proto3" json:"imageHeight,omitempty"`
	// 图片颜色主色调
	ColorExtractorRGB string `protobuf:"bytes,8,opt,name=colorExtractorRGB,proto3" json:"colorExtractorRGB,omitempty"`
	// 图片颜色主色调
	ColorExtractorHEX string `protobuf:"bytes,9,opt,name=colorExtractorHEX,proto3" json:"colorExtractorHEX,omitempty"`
	// 标签方便搜索
	Tags []string `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	// 上下文，JSON类型
	Context []byte `protobuf:"bytes,11,opt,name=context,proto3" json:"context,omitempty"`
	// 创建时间
	CreatedAt            string   `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadFileReply) Reset()         { *m = UploadFileReply{} }
func (m *UploadFileReply) String() string { return proto.CompactTextString(m) }
func (*UploadFileReply) ProtoMessage()    {}
func (*UploadFileReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{7}
}
func (m *UploadFileReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadFileReply.Unmarshal(m, b)
}
func (m *UploadFileReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadFileReply.Marshal(b, m, deterministic)
}
func (dst *UploadFileReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadFileReply.Merge(dst, src)
}
func (m *UploadFileReply) XXX_Size() int {
	return xxx_messageInfo_UploadFileReply.Size(m)
}
func (m *UploadFileReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadFileReply.DiscardUnknown(m)
}

var xxx_messageInfo_UploadFileReply proto.InternalMessageInfo

func (m *UploadFileReply) GetFileId() string {
	if m != nil {
		return m.FileId
	}
	return ""
}

func (m *UploadFileReply) GetFileSize() int64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *UploadFileReply) GetFileSha256() string {
	if m != nil {
		return m.FileSha256
	}
	return ""
}

func (m *UploadFileReply) GetFileType() string {
	if m != nil {
		return m.FileType
	}
	return ""
}

func (m *UploadFileReply) GetImageFormat() string {
	if m != nil {
		return m.ImageFormat
	}
	return ""
}

func (m *UploadFileReply) GetImageWidth() int64 {
	if m != nil {
		return m.ImageWidth
	}
	return 0
}

func (m *UploadFileReply) GetImageHeight() int64 {
	if m != nil {
		return m.ImageHeight
	}
	return 0
}

func (m *UploadFileReply) GetColorExtractorRGB() string {
	if m != nil {
		return m.ColorExtractorRGB
	}
	return ""
}

func (m *UploadFileReply) GetColorExtractorHEX() string {
	if m != nil {
		return m.ColorExtractorHEX
	}
	return ""
}

func (m *UploadFileReply) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *UploadFileReply) GetContext() []byte {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *UploadFileReply) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type ListUploadFileRequest struct {
	UpRequest            []*UploadFileRequest `protobuf:"bytes,1,rep,name=upRequest,proto3" json:"upRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListUploadFileRequest) Reset()         { *m = ListUploadFileRequest{} }
func (m *ListUploadFileRequest) String() string { return proto.CompactTextString(m) }
func (*ListUploadFileRequest) ProtoMessage()    {}
func (*ListUploadFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{8}
}
func (m *ListUploadFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUploadFileRequest.Unmarshal(m, b)
}
func (m *ListUploadFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUploadFileRequest.Marshal(b, m, deterministic)
}
func (dst *ListUploadFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUploadFileRequest.Merge(dst, src)
}
func (m *ListUploadFileRequest) XXX_Size() int {
	return xxx_messageInfo_ListUploadFileRequest.Size(m)
}
func (m *ListUploadFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUploadFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUploadFileRequest proto.InternalMessageInfo

func (m *ListUploadFileRequest) GetUpRequest() []*UploadFileRequest {
	if m != nil {
		return m.UpRequest
	}
	return nil
}

type ListUploadFileReply struct {
	UpReply              []*UploadFileReply `protobuf:"bytes,2,rep,name=upReply,proto3" json:"upReply,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListUploadFileReply) Reset()         { *m = ListUploadFileReply{} }
func (m *ListUploadFileReply) String() string { return proto.CompactTextString(m) }
func (*ListUploadFileReply) ProtoMessage()    {}
func (*ListUploadFileReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{9}
}
func (m *ListUploadFileReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUploadFileReply.Unmarshal(m, b)
}
func (m *ListUploadFileReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUploadFileReply.Marshal(b, m, deterministic)
}
func (dst *ListUploadFileReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUploadFileReply.Merge(dst, src)
}
func (m *ListUploadFileReply) XXX_Size() int {
	return xxx_messageInfo_ListUploadFileReply.Size(m)
}
func (m *ListUploadFileReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUploadFileReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListUploadFileReply proto.InternalMessageInfo

func (m *ListUploadFileReply) GetUpReply() []*UploadFileReply {
	if m != nil {
		return m.UpReply
	}
	return nil
}

type ImgRequest struct {
	// 图片地址
	DownloadUrl          string   `protobuf:"bytes,1,opt,name=downloadUrl,proto3" json:"downloadUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImgRequest) Reset()         { *m = ImgRequest{} }
func (m *ImgRequest) String() string { return proto.CompactTextString(m) }
func (*ImgRequest) ProtoMessage()    {}
func (*ImgRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{10}
}
func (m *ImgRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImgRequest.Unmarshal(m, b)
}
func (m *ImgRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImgRequest.Marshal(b, m, deterministic)
}
func (dst *ImgRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImgRequest.Merge(dst, src)
}
func (m *ImgRequest) XXX_Size() int {
	return xxx_messageInfo_ImgRequest.Size(m)
}
func (m *ImgRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImgRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImgRequest proto.InternalMessageInfo

func (m *ImgRequest) GetDownloadUrl() string {
	if m != nil {
		return m.DownloadUrl
	}
	return ""
}

type ImgReply struct {
	// size，文件大小，单位：Bytes
	Size int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// format，图片类型，如png、jpeg、gif、bmp等
	Format string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	// width，图片宽度，单位：像素(px)
	Width int64 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	// height，图片高度，单位：像素(px)
	Height int64 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	// 图片颜色主色调RGB
	ColorExtractorRGB string `protobuf:"bytes,5,opt,name=colorExtractorRGB,proto3" json:"colorExtractorRGB,omitempty"`
	// colorExtractor，图片颜色主色调
	ColorExtractorHEX string `protobuf:"bytes,6,opt,name=colorExtractorHEX,proto3" json:"colorExtractorHEX,omitempty"`
	// ColorModel,彩色空间，如palette16、ycbcr等。
	ColorModel string `protobuf:"bytes,7,opt,name=colorModel,proto3" json:"colorModel,omitempty"`
	// 帧数，gif 图片会返回此项。
	FrameNumber int64 `protobuf:"varint,8,opt,name=frameNumber,proto3" json:"frameNumber,omitempty"`
	// 图片EXIF信息
	Exif *Exif `protobuf:"bytes,9,opt,name=exif,proto3" json:"exif,omitempty"`
	// url
	Url                  string   `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImgReply) Reset()         { *m = ImgReply{} }
func (m *ImgReply) String() string { return proto.CompactTextString(m) }
func (*ImgReply) ProtoMessage()    {}
func (*ImgReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{11}
}
func (m *ImgReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImgReply.Unmarshal(m, b)
}
func (m *ImgReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImgReply.Marshal(b, m, deterministic)
}
func (dst *ImgReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImgReply.Merge(dst, src)
}
func (m *ImgReply) XXX_Size() int {
	return xxx_messageInfo_ImgReply.Size(m)
}
func (m *ImgReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ImgReply.DiscardUnknown(m)
}

var xxx_messageInfo_ImgReply proto.InternalMessageInfo

func (m *ImgReply) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ImgReply) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *ImgReply) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *ImgReply) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ImgReply) GetColorExtractorRGB() string {
	if m != nil {
		return m.ColorExtractorRGB
	}
	return ""
}

func (m *ImgReply) GetColorExtractorHEX() string {
	if m != nil {
		return m.ColorExtractorHEX
	}
	return ""
}

func (m *ImgReply) GetColorModel() string {
	if m != nil {
		return m.ColorModel
	}
	return ""
}

func (m *ImgReply) GetFrameNumber() int64 {
	if m != nil {
		return m.FrameNumber
	}
	return 0
}

func (m *ImgReply) GetExif() *Exif {
	if m != nil {
		return m.Exif
	}
	return nil
}

func (m *ImgReply) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Exif struct {
	DateTime             string   `protobuf:"bytes,1,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	ExposureBiasValue    string   `protobuf:"bytes,2,opt,name=exposureBiasValue,proto3" json:"exposureBiasValue,omitempty"`
	ExposureTime         string   `protobuf:"bytes,3,opt,name=exposureTime,proto3" json:"exposureTime,omitempty"`
	Model                string   `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	ISOSpeedRatings      string   `protobuf:"bytes,5,opt,name=iSOSpeedRatings,proto3" json:"iSOSpeedRatings,omitempty"`
	ResolutionUnit       string   `protobuf:"bytes,6,opt,name=resolutionUnit,proto3" json:"resolutionUnit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Exif) Reset()         { *m = Exif{} }
func (m *Exif) String() string { return proto.CompactTextString(m) }
func (*Exif) ProtoMessage()    {}
func (*Exif) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{12}
}
func (m *Exif) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Exif.Unmarshal(m, b)
}
func (m *Exif) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Exif.Marshal(b, m, deterministic)
}
func (dst *Exif) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Exif.Merge(dst, src)
}
func (m *Exif) XXX_Size() int {
	return xxx_messageInfo_Exif.Size(m)
}
func (m *Exif) XXX_DiscardUnknown() {
	xxx_messageInfo_Exif.DiscardUnknown(m)
}

var xxx_messageInfo_Exif proto.InternalMessageInfo

func (m *Exif) GetDateTime() string {
	if m != nil {
		return m.DateTime
	}
	return ""
}

func (m *Exif) GetExposureBiasValue() string {
	if m != nil {
		return m.ExposureBiasValue
	}
	return ""
}

func (m *Exif) GetExposureTime() string {
	if m != nil {
		return m.ExposureTime
	}
	return ""
}

func (m *Exif) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Exif) GetISOSpeedRatings() string {
	if m != nil {
		return m.ISOSpeedRatings
	}
	return ""
}

func (m *Exif) GetResolutionUnit() string {
	if m != nil {
		return m.ResolutionUnit
	}
	return ""
}

type ListImgRequest struct {
	// ImgRequest
	Request              []*ImgRequest `protobuf:"bytes,1,rep,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListImgRequest) Reset()         { *m = ListImgRequest{} }
func (m *ListImgRequest) String() string { return proto.CompactTextString(m) }
func (*ListImgRequest) ProtoMessage()    {}
func (*ListImgRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{13}
}
func (m *ListImgRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListImgRequest.Unmarshal(m, b)
}
func (m *ListImgRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListImgRequest.Marshal(b, m, deterministic)
}
func (dst *ListImgRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListImgRequest.Merge(dst, src)
}
func (m *ListImgRequest) XXX_Size() int {
	return xxx_messageInfo_ListImgRequest.Size(m)
}
func (m *ListImgRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListImgRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListImgRequest proto.InternalMessageInfo

func (m *ListImgRequest) GetRequest() []*ImgRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type ListImgReply struct {
	ImgReply             []*ImgReply `protobuf:"bytes,1,rep,name=imgReply,proto3" json:"imgReply,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListImgReply) Reset()         { *m = ListImgReply{} }
func (m *ListImgReply) String() string { return proto.CompactTextString(m) }
func (*ListImgReply) ProtoMessage()    {}
func (*ListImgReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{14}
}
func (m *ListImgReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListImgReply.Unmarshal(m, b)
}
func (m *ListImgReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListImgReply.Marshal(b, m, deterministic)
}
func (dst *ListImgReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListImgReply.Merge(dst, src)
}
func (m *ListImgReply) XXX_Size() int {
	return xxx_messageInfo_ListImgReply.Size(m)
}
func (m *ListImgReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListImgReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListImgReply proto.InternalMessageInfo

func (m *ListImgReply) GetImgReply() []*ImgReply {
	if m != nil {
		return m.ImgReply
	}
	return nil
}

type YoutubeVideoRequest struct {
	// 视频地址
	Link                 string   `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YoutubeVideoRequest) Reset()         { *m = YoutubeVideoRequest{} }
func (m *YoutubeVideoRequest) String() string { return proto.CompactTextString(m) }
func (*YoutubeVideoRequest) ProtoMessage()    {}
func (*YoutubeVideoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{15}
}
func (m *YoutubeVideoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YoutubeVideoRequest.Unmarshal(m, b)
}
func (m *YoutubeVideoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YoutubeVideoRequest.Marshal(b, m, deterministic)
}
func (dst *YoutubeVideoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YoutubeVideoRequest.Merge(dst, src)
}
func (m *YoutubeVideoRequest) XXX_Size() int {
	return xxx_messageInfo_YoutubeVideoRequest.Size(m)
}
func (m *YoutubeVideoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_YoutubeVideoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_YoutubeVideoRequest proto.InternalMessageInfo

func (m *YoutubeVideoRequest) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type YoutubeVideoReply struct {
	// youtube id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 截图
	ScreenYoutubeUrl string `protobuf:"bytes,3,opt,name=screenYoutubeUrl,proto3" json:"screenYoutubeUrl,omitempty"`
	// 截图文件id(s3key)
	ScreenFid string `protobuf:"bytes,4,opt,name=screenFid,proto3" json:"screenFid,omitempty"`
	// 播放长度
	LengthSeconds string `protobuf:"bytes,5,opt,name=lengthSeconds,proto3" json:"lengthSeconds,omitempty"`
	// 关键字
	KeyWords             []string `protobuf:"bytes,6,rep,name=keyWords,proto3" json:"keyWords,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YoutubeVideoReply) Reset()         { *m = YoutubeVideoReply{} }
func (m *YoutubeVideoReply) String() string { return proto.CompactTextString(m) }
func (*YoutubeVideoReply) ProtoMessage()    {}
func (*YoutubeVideoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_pure_media_bb5152933ecf21a0, []int{16}
}
func (m *YoutubeVideoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YoutubeVideoReply.Unmarshal(m, b)
}
func (m *YoutubeVideoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YoutubeVideoReply.Marshal(b, m, deterministic)
}
func (dst *YoutubeVideoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YoutubeVideoReply.Merge(dst, src)
}
func (m *YoutubeVideoReply) XXX_Size() int {
	return xxx_messageInfo_YoutubeVideoReply.Size(m)
}
func (m *YoutubeVideoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_YoutubeVideoReply.DiscardUnknown(m)
}

var xxx_messageInfo_YoutubeVideoReply proto.InternalMessageInfo

func (m *YoutubeVideoReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *YoutubeVideoReply) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *YoutubeVideoReply) GetScreenYoutubeUrl() string {
	if m != nil {
		return m.ScreenYoutubeUrl
	}
	return ""
}

func (m *YoutubeVideoReply) GetScreenFid() string {
	if m != nil {
		return m.ScreenFid
	}
	return ""
}

func (m *YoutubeVideoReply) GetLengthSeconds() string {
	if m != nil {
		return m.LengthSeconds
	}
	return ""
}

func (m *YoutubeVideoReply) GetKeyWords() []string {
	if m != nil {
		return m.KeyWords
	}
	return nil
}

func init() {
	proto.RegisterType((*DLRequest)(nil), "protos.DLRequest")
	proto.RegisterType((*DLReply)(nil), "protos.DLReply")
	proto.RegisterType((*AddRequest)(nil), "protos.AddRequest")
	proto.RegisterType((*AddReply)(nil), "protos.AddReply")
	proto.RegisterType((*ImgCensorRequest)(nil), "protos.ImgCensorRequest")
	proto.RegisterType((*ImgCensorReply)(nil), "protos.ImgCensorReply")
	proto.RegisterType((*UploadFileRequest)(nil), "protos.UploadFileRequest")
	proto.RegisterType((*UploadFileReply)(nil), "protos.UploadFileReply")
	proto.RegisterType((*ListUploadFileRequest)(nil), "protos.ListUploadFileRequest")
	proto.RegisterType((*ListUploadFileReply)(nil), "protos.ListUploadFileReply")
	proto.RegisterType((*ImgRequest)(nil), "protos.ImgRequest")
	proto.RegisterType((*ImgReply)(nil), "protos.ImgReply")
	proto.RegisterType((*Exif)(nil), "protos.Exif")
	proto.RegisterType((*ListImgRequest)(nil), "protos.ListImgRequest")
	proto.RegisterType((*ListImgReply)(nil), "protos.ListImgReply")
	proto.RegisterType((*YoutubeVideoRequest)(nil), "protos.YoutubeVideoRequest")
	proto.RegisterType((*YoutubeVideoReply)(nil), "protos.YoutubeVideoReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PureMediaServiceClient is the client API for PureMediaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PureMediaServiceClient interface {
	// 上传文件
	UploadFile(ctx context.Context, in *UploadFileRequest, opts ...grpc.CallOption) (*UploadFileReply, error)
	//
	ListUploadFile(ctx context.Context, in *ListUploadFileRequest, opts ...grpc.CallOption) (*ListUploadFileReply, error)
	// 图片分析
	ImgAnalyze(ctx context.Context, in *ImgRequest, opts ...grpc.CallOption) (*ImgReply, error)
	// 队列图片分析
	ListImgAnalyze(ctx context.Context, in *ListImgRequest, opts ...grpc.CallOption) (*ListImgReply, error)
	// 获取视频信息
	YoutubeVideo(ctx context.Context, in *YoutubeVideoRequest, opts ...grpc.CallOption) (*YoutubeVideoReply, error)
	// 根据图片URL鉴黄
	ImgCensor(ctx context.Context, in *ImgCensorRequest, opts ...grpc.CallOption) (*ImgCensorReply, error)
	// 添加鉴黄队列
	AddImgtoBuckets(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddReply, error)
	// 下载YouTube视频
	YoutubeDownload(ctx context.Context, in *DLRequest, opts ...grpc.CallOption) (*DLReply, error)
}

type pureMediaServiceClient struct {
	cc *grpc.ClientConn
}

func NewPureMediaServiceClient(cc *grpc.ClientConn) PureMediaServiceClient {
	return &pureMediaServiceClient{cc}
}

func (c *pureMediaServiceClient) UploadFile(ctx context.Context, in *UploadFileRequest, opts ...grpc.CallOption) (*UploadFileReply, error) {
	out := new(UploadFileReply)
	err := c.cc.Invoke(ctx, "/protos.PureMediaService/UploadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pureMediaServiceClient) ListUploadFile(ctx context.Context, in *ListUploadFileRequest, opts ...grpc.CallOption) (*ListUploadFileReply, error) {
	out := new(ListUploadFileReply)
	err := c.cc.Invoke(ctx, "/protos.PureMediaService/ListUploadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pureMediaServiceClient) ImgAnalyze(ctx context.Context, in *ImgRequest, opts ...grpc.CallOption) (*ImgReply, error) {
	out := new(ImgReply)
	err := c.cc.Invoke(ctx, "/protos.PureMediaService/ImgAnalyze", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pureMediaServiceClient) ListImgAnalyze(ctx context.Context, in *ListImgRequest, opts ...grpc.CallOption) (*ListImgReply, error) {
	out := new(ListImgReply)
	err := c.cc.Invoke(ctx, "/protos.PureMediaService/ListImgAnalyze", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pureMediaServiceClient) YoutubeVideo(ctx context.Context, in *YoutubeVideoRequest, opts ...grpc.CallOption) (*YoutubeVideoReply, error) {
	out := new(YoutubeVideoReply)
	err := c.cc.Invoke(ctx, "/protos.PureMediaService/YoutubeVideo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pureMediaServiceClient) ImgCensor(ctx context.Context, in *ImgCensorRequest, opts ...grpc.CallOption) (*ImgCensorReply, error) {
	out := new(ImgCensorReply)
	err := c.cc.Invoke(ctx, "/protos.PureMediaService/ImgCensor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pureMediaServiceClient) AddImgtoBuckets(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddReply, error) {
	out := new(AddReply)
	err := c.cc.Invoke(ctx, "/protos.PureMediaService/AddImgtoBuckets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pureMediaServiceClient) YoutubeDownload(ctx context.Context, in *DLRequest, opts ...grpc.CallOption) (*DLReply, error) {
	out := new(DLReply)
	err := c.cc.Invoke(ctx, "/protos.PureMediaService/YoutubeDownload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PureMediaServiceServer is the server API for PureMediaService service.
type PureMediaServiceServer interface {
	// 上传文件
	UploadFile(context.Context, *UploadFileRequest) (*UploadFileReply, error)
	//
	ListUploadFile(context.Context, *ListUploadFileRequest) (*ListUploadFileReply, error)
	// 图片分析
	ImgAnalyze(context.Context, *ImgRequest) (*ImgReply, error)
	// 队列图片分析
	ListImgAnalyze(context.Context, *ListImgRequest) (*ListImgReply, error)
	// 获取视频信息
	YoutubeVideo(context.Context, *YoutubeVideoRequest) (*YoutubeVideoReply, error)
	// 根据图片URL鉴黄
	ImgCensor(context.Context, *ImgCensorRequest) (*ImgCensorReply, error)
	// 添加鉴黄队列
	AddImgtoBuckets(context.Context, *AddRequest) (*AddReply, error)
	// 下载YouTube视频
	YoutubeDownload(context.Context, *DLRequest) (*DLReply, error)
}

func RegisterPureMediaServiceServer(s *grpc.Server, srv PureMediaServiceServer) {
	s.RegisterService(&_PureMediaService_serviceDesc, srv)
}

func _PureMediaService_UploadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PureMediaServiceServer).UploadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.PureMediaService/UploadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PureMediaServiceServer).UploadFile(ctx, req.(*UploadFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PureMediaService_ListUploadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUploadFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PureMediaServiceServer).ListUploadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.PureMediaService/ListUploadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PureMediaServiceServer).ListUploadFile(ctx, req.(*ListUploadFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PureMediaService_ImgAnalyze_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PureMediaServiceServer).ImgAnalyze(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.PureMediaService/ImgAnalyze",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PureMediaServiceServer).ImgAnalyze(ctx, req.(*ImgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PureMediaService_ListImgAnalyze_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListImgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PureMediaServiceServer).ListImgAnalyze(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.PureMediaService/ListImgAnalyze",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PureMediaServiceServer).ListImgAnalyze(ctx, req.(*ListImgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PureMediaService_YoutubeVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(YoutubeVideoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PureMediaServiceServer).YoutubeVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.PureMediaService/YoutubeVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PureMediaServiceServer).YoutubeVideo(ctx, req.(*YoutubeVideoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PureMediaService_ImgCensor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImgCensorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PureMediaServiceServer).ImgCensor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.PureMediaService/ImgCensor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PureMediaServiceServer).ImgCensor(ctx, req.(*ImgCensorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PureMediaService_AddImgtoBuckets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PureMediaServiceServer).AddImgtoBuckets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.PureMediaService/AddImgtoBuckets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PureMediaServiceServer).AddImgtoBuckets(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PureMediaService_YoutubeDownload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PureMediaServiceServer).YoutubeDownload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.PureMediaService/YoutubeDownload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PureMediaServiceServer).YoutubeDownload(ctx, req.(*DLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PureMediaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.PureMediaService",
	HandlerType: (*PureMediaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UploadFile",
			Handler:    _PureMediaService_UploadFile_Handler,
		},
		{
			MethodName: "ListUploadFile",
			Handler:    _PureMediaService_ListUploadFile_Handler,
		},
		{
			MethodName: "ImgAnalyze",
			Handler:    _PureMediaService_ImgAnalyze_Handler,
		},
		{
			MethodName: "ListImgAnalyze",
			Handler:    _PureMediaService_ListImgAnalyze_Handler,
		},
		{
			MethodName: "YoutubeVideo",
			Handler:    _PureMediaService_YoutubeVideo_Handler,
		},
		{
			MethodName: "ImgCensor",
			Handler:    _PureMediaService_ImgCensor_Handler,
		},
		{
			MethodName: "AddImgtoBuckets",
			Handler:    _PureMediaService_AddImgtoBuckets_Handler,
		},
		{
			MethodName: "YoutubeDownload",
			Handler:    _PureMediaService_YoutubeDownload_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pure_media.proto",
}

func init() { proto.RegisterFile("pure_media.proto", fileDescriptor_pure_media_bb5152933ecf21a0) }

var fileDescriptor_pure_media_bb5152933ecf21a0 = []byte{
	// 1030 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xfd, 0x6e, 0x1b, 0x45,
	0x10, 0x8f, 0x63, 0xc7, 0x1f, 0x63, 0x13, 0x3b, 0xdb, 0x12, 0xae, 0x06, 0x2a, 0x6b, 0x85, 0x90,
	0xa9, 0xa2, 0x48, 0x18, 0x4a, 0x41, 0x42, 0x2d, 0x09, 0x4d, 0x70, 0xa4, 0x36, 0x54, 0xe7, 0xa6,
	0x2d, 0x7f, 0xa1, 0x8b, 0x6f, 0x7c, 0x5e, 0xe5, 0xbe, 0xd8, 0xdb, 0x6b, 0xed, 0xbe, 0x43, 0x1f,
	0x81, 0xd7, 0xe0, 0x0d, 0x78, 0x0b, 0x1e, 0x06, 0xed, 0xee, 0xed, 0xdd, 0x39, 0xb6, 0x85, 0xf8,
	0xcb, 0xfb, 0xfb, 0xcd, 0xa7, 0x67, 0x66, 0xe7, 0x16, 0x7a, 0x71, 0xca, 0xf1, 0xf7, 0x00, 0x5d,
	0xe6, 0x1c, 0xc7, 0x3c, 0x12, 0x11, 0xa9, 0xab, 0x9f, 0x84, 0x3e, 0x81, 0xd6, 0xd3, 0x67, 0x36,
	0xfe, 0x91, 0x62, 0x22, 0x48, 0x1f, 0x9a, 0x6f, 0x99, 0x8b, 0xd1, 0x15, 0xf7, 0xad, 0xca, 0xa0,
	0x32, 0x6c, 0xd9, 0x39, 0x26, 0x87, 0x50, 0x9f, 0x45, 0x3c, 0x70, 0x84, 0xb5, 0xab, 0x24, 0x19,
	0xa2, 0x0f, 0xa1, 0x21, 0x1d, 0xc4, 0xfe, 0x92, 0xf4, 0xa0, 0x3a, 0x63, 0x6e, 0x66, 0x29, 0x8f,
	0xc4, 0x82, 0xc6, 0x34, 0x0a, 0x05, 0x2e, 0x8c, 0x95, 0x81, 0xf4, 0x31, 0xc0, 0x89, 0xeb, 0x9a,
	0xc0, 0x87, 0x50, 0x67, 0x81, 0x57, 0x84, 0xcd, 0x90, 0xb4, 0x67, 0x81, 0x77, 0xe9, 0x04, 0x68,
	0xec, 0x33, 0x48, 0xbf, 0x87, 0xa6, 0xb2, 0x97, 0x71, 0xef, 0xc2, 0x1e, 0x0b, 0xbc, 0x0b, 0x13,
	0x59, 0x03, 0xe9, 0x93, 0x63, 0x92, 0xfa, 0x79, 0xc2, 0x1a, 0xd1, 0x07, 0xd0, 0xbb, 0x08, 0xbc,
	0x9f, 0x31, 0x4c, 0x22, 0xfe, 0x1f, 0xf1, 0xe9, 0x10, 0xf6, 0x4b, 0xba, 0x32, 0x56, 0xe1, 0xb5,
	0xb2, 0xe2, 0xf5, 0x43, 0x05, 0x0e, 0xae, 0x62, 0x3f, 0x72, 0xdc, 0x73, 0xe6, 0xa3, 0xf1, 0x6b,
	0x41, 0x63, 0xc6, 0x7c, 0x2c, 0x1c, 0x1b, 0x48, 0x08, 0xd4, 0x84, 0xe3, 0x25, 0xd6, 0xee, 0xa0,
	0x3a, 0x6c, 0xd9, 0xea, 0x2c, 0xcb, 0x2f, 0xc5, 0x2f, 0x97, 0x31, 0x5a, 0x55, 0x5d, 0x7e, 0x83,
	0x65, 0xdc, 0xeb, 0x74, 0x7a, 0x83, 0xc2, 0xaa, 0xe9, 0xb8, 0x1a, 0x49, 0x3e, 0xe6, 0x38, 0x63,
	0x0b, 0x6b, 0x4f, 0xf3, 0x1a, 0xd1, 0x0f, 0x55, 0xe8, 0x96, 0xf3, 0xc9, 0x72, 0x97, 0xfe, 0xf2,
	0x42, 0x65, 0xc8, 0xc4, 0x9d, 0xb0, 0xf7, 0xba, 0xcc, 0x55, 0x3b, 0xc7, 0xe4, 0x3e, 0x80, 0x3a,
	0xcf, 0x9d, 0xd1, 0xc3, 0xef, 0xb2, 0xac, 0x4a, 0xcc, 0x4a, 0xce, 0xb5, 0x5b, 0x39, 0x0f, 0xa0,
	0xcd, 0x02, 0xc7, 0xc3, 0x73, 0x3d, 0x37, 0x3a, 0xc1, 0x32, 0x25, 0xbd, 0x2b, 0xf8, 0x9a, 0xb9,
	0x62, 0x6e, 0xd5, 0x55, 0xec, 0x12, 0x93, 0x7b, 0x18, 0x23, 0xf3, 0xe6, 0xc2, 0x6a, 0x28, 0x85,
	0x32, 0x45, 0x8e, 0xe0, 0x60, 0x1a, 0xf9, 0x11, 0x3f, 0x5b, 0x08, 0xee, 0x4c, 0x45, 0xc4, 0xed,
	0x5f, 0x4e, 0xad, 0xa6, 0x8a, 0xb4, 0x2e, 0x58, 0xd7, 0x1e, 0x9f, 0xbd, 0xb1, 0x5a, 0x9b, 0xb4,
	0xc7, 0x67, 0x6f, 0xf2, 0x1e, 0x41, 0xa9, 0x47, 0xa5, 0x89, 0x6e, 0x0f, 0x2a, 0xc3, 0x4e, 0x3e,
	0xd1, 0xe4, 0x33, 0x68, 0x4d, 0x39, 0x3a, 0x02, 0xdd, 0x13, 0x61, 0x75, 0x94, 0xcf, 0x82, 0xa0,
	0x2f, 0xe0, 0xe3, 0x67, 0x2c, 0x11, 0xeb, 0x23, 0xf2, 0x08, 0x5a, 0x69, 0x9c, 0x01, 0xab, 0x32,
	0xa8, 0x0e, 0xdb, 0xa3, 0x7b, 0xfa, 0x8e, 0x26, 0xc7, 0x6b, 0xda, 0x76, 0xa1, 0x4b, 0xc7, 0x70,
	0xe7, 0xb6, 0x47, 0xd9, 0xe4, 0xaf, 0xa1, 0x21, 0x75, 0x62, 0x7f, 0xa9, 0x66, 0xab, 0x3d, 0xfa,
	0x64, 0x93, 0xb7, 0xd8, 0x5f, 0xda, 0x46, 0x8f, 0x1e, 0x03, 0x5c, 0x04, 0x9e, 0x49, 0x68, 0x00,
	0x6d, 0x37, 0x7a, 0x17, 0x4a, 0xdd, 0x62, 0x6e, 0xcb, 0x14, 0xfd, 0x6b, 0x17, 0x9a, 0xca, 0x40,
	0xc6, 0x23, 0x50, 0x4b, 0xe4, 0xe0, 0x54, 0x54, 0x6f, 0xd4, 0x79, 0xdb, 0xae, 0x90, 0x17, 0xf5,
	0x9d, 0xea, 0x74, 0x55, 0x29, 0x6b, 0x20, 0xb5, 0xe7, 0xba, 0xbf, 0x35, 0x45, 0x67, 0x68, 0x73,
	0x6b, 0xf7, 0xfe, 0x57, 0x6b, 0xeb, 0xdb, 0x5a, 0x7b, 0x1f, 0x40, 0x91, 0xcf, 0x23, 0x17, 0x7d,
	0x35, 0x57, 0x2d, 0xbb, 0xc4, 0xc8, 0x22, 0xcc, 0xb8, 0x13, 0xe0, 0x65, 0x1a, 0x5c, 0x23, 0x57,
	0x03, 0x55, 0xb5, 0xcb, 0x14, 0x19, 0x40, 0x0d, 0x17, 0x6c, 0xa6, 0xa6, 0xa7, 0x3d, 0xea, 0x98,
	0x22, 0x9f, 0x2d, 0xd8, 0xcc, 0x56, 0x12, 0xb9, 0x0e, 0x53, 0xee, 0x5b, 0xa0, 0xd7, 0x61, 0xca,
	0x7d, 0xfa, 0x4f, 0x05, 0x6a, 0x52, 0x41, 0xde, 0x1a, 0xd7, 0x11, 0xf8, 0x92, 0x05, 0x68, 0x16,
	0xad, 0xc1, 0xf2, 0x8f, 0xe0, 0x22, 0x8e, 0x92, 0x94, 0xe3, 0x29, 0x73, 0x92, 0x57, 0x8e, 0x9f,
	0x9a, 0xed, 0xb7, 0x2e, 0x20, 0x14, 0x3a, 0x86, 0x54, 0xde, 0xf4, 0x0d, 0x5d, 0xe1, 0x64, 0xd9,
	0x03, 0xf5, 0x3f, 0xf5, 0x05, 0xd5, 0x80, 0x0c, 0xa1, 0xcb, 0x26, 0xbf, 0x4e, 0x62, 0x44, 0xd7,
	0x76, 0x04, 0x0b, 0xbd, 0x24, 0x2b, 0xee, 0x6d, 0x9a, 0x7c, 0x09, 0xfb, 0x1c, 0x93, 0xc8, 0x4f,
	0x05, 0x8b, 0xc2, 0xab, 0x90, 0x89, 0xac, 0xae, 0xb7, 0x58, 0xfa, 0x18, 0xf6, 0xe5, 0x44, 0x96,
	0x66, 0xe9, 0x08, 0x1a, 0x7c, 0x65, 0xb4, 0x89, 0xa9, 0x53, 0xa1, 0x64, 0x1b, 0x15, 0xfa, 0x23,
	0x74, 0x72, 0x7b, 0x39, 0x5a, 0x47, 0xd0, 0x64, 0xd9, 0x39, 0x33, 0xef, 0xad, 0x98, 0xcb, 0x21,
	0xce, 0x35, 0xe8, 0x57, 0x70, 0xe7, 0xb7, 0x28, 0x15, 0xe9, 0x35, 0xbe, 0x92, 0xdf, 0x2c, 0x93,
	0x02, 0x81, 0x9a, 0xcf, 0xc2, 0x9b, 0xac, 0xcc, 0xea, 0x4c, 0xff, 0xae, 0xc0, 0xc1, 0xaa, 0xae,
	0x0c, 0xb7, 0x0f, 0xbb, 0xf9, 0xd7, 0x6b, 0x97, 0xb9, 0xb2, 0x6c, 0x82, 0x09, 0xdf, 0x14, 0x5f,
	0x03, 0xf2, 0x00, 0x7a, 0xc9, 0x94, 0x23, 0x86, 0x99, 0x03, 0x79, 0x47, 0x74, 0xd1, 0xd7, 0x78,
	0xb9, 0x12, 0x34, 0x77, 0xce, 0xdc, 0xac, 0xf8, 0x05, 0x41, 0xbe, 0x80, 0x8f, 0x7c, 0x0c, 0x3d,
	0x31, 0x9f, 0xe0, 0x34, 0x0a, 0x5d, 0x53, 0xfe, 0x55, 0x52, 0x8e, 0xca, 0x0d, 0x2e, 0x5f, 0x47,
	0xdc, 0x4d, 0xac, 0xba, 0x5a, 0x44, 0x39, 0x1e, 0xfd, 0x59, 0x83, 0xde, 0x8b, 0x94, 0xe3, 0x73,
	0xf9, 0x61, 0x9f, 0x20, 0x7f, 0xcb, 0xa6, 0x48, 0x4e, 0x01, 0x8a, 0x9b, 0x4e, 0xb6, 0xef, 0x92,
	0xfe, 0xb6, 0xc5, 0x40, 0x77, 0xc8, 0xa5, 0xee, 0x64, 0xc9, 0xcf, 0xe7, 0x46, 0x79, 0xe3, 0x16,
	0xeb, 0x7f, 0xba, 0x4d, 0xac, 0xfd, 0x7d, 0xab, 0x36, 0xcc, 0x49, 0xe8, 0xf8, 0xcb, 0xf7, 0x48,
	0x36, 0x0c, 0x41, 0x7f, 0xad, 0xb3, 0x74, 0x87, 0xfc, 0x94, 0xcf, 0x93, 0xb1, 0x3c, 0x2c, 0x87,
	0x29, 0x59, 0xdf, 0x5d, 0xe3, 0xb5, 0x87, 0x31, 0x74, 0xca, 0x7d, 0x26, 0x79, 0x9a, 0x1b, 0x26,
	0xa5, 0x7f, 0x6f, 0xb3, 0x50, 0x7b, 0x7a, 0x02, 0xad, 0xfc, 0x25, 0x40, 0xac, 0x52, 0xb2, 0x2b,
	0x0f, 0x89, 0xfe, 0xe1, 0x06, 0x89, 0x76, 0xf0, 0x03, 0x74, 0x4f, 0x5c, 0xf7, 0x22, 0xf0, 0x44,
	0x74, 0xaa, 0x3e, 0xdd, 0x49, 0x51, 0x87, 0xe2, 0x25, 0x54, 0xd4, 0xc1, 0xbc, 0x6e, 0xe8, 0x0e,
	0x79, 0x04, 0xdd, 0x2c, 0xa5, 0xa7, 0xd9, 0x16, 0x26, 0x07, 0x46, 0x2d, 0x7f, 0xbc, 0xf5, 0xbb,
	0x65, 0x4a, 0x19, 0x5e, 0xeb, 0x47, 0xde, 0x37, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x54, 0xca,
	0x0f, 0x00, 0xff, 0x09, 0x00, 0x00,
}
